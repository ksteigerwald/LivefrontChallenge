//
//  ToolButtonAction.swift
//  LivefrontChallenge
//
//  Created by Kris Steigerwald on 12/30/22.
//

import Foundation

/// Enum representing the four types of tool buttons available.
enum ToolButtonAction {
    case bulletPoints
    case sentiment
    case tone
    case original
    case none
    case tokenError
    case error

    var image: String {
        switch self {
        case .bulletPoints: return "list.bullet"
        case .sentiment: return "gauge.medium"
        case .tone: return "water.waves"
        case .original: return "newspaper"
        case .none: return "x.square.fill"
        case .tokenError: return "exclamationmark.bubble.fill"
        case .error: return "exclamationmark.triangle"
        }
    }

    var decription: String {
        switch self {
        case .bulletPoints: return "Choose this option to render the given article as a set of bullet points"
        case .sentiment: return "Choose this option to generate AI baseed sentiment analysis using OpenAI"
        case .tone: return "Choose this option to have the AI score the article either Positive, Negative or Neutral"
        case .original: return "Show the original AI generated summary article as was first generated by OpenAI"
        case .none: return ""
        case .tokenError: return "A Token Error has occured"
        case .error: return "An Error has occured"
        }
    }

    var loadingMessage: String {
        switch self {
        case .bulletPoints: return "Loading a set of bullet points from the article provided"
        case .sentiment: return "Running sentiment analysis on the given article..."
        case .tone: return "Running tone (positive, negative, neutral) analysis on the given article..."
        case .original: return "Content is being fetched from a given URL, then summarized into 7 paragraphs"
        case .none: return "Loading"
        case .tokenError: return "We have encounted a generator error, tokens exced limit. Try to regenerate article"
        case .error: return "We are sorry but an error has occured"
        }
    }

    var loadingHeading: String {
        switch self {
        case .bulletPoints: return "Loading Bullet Points"
        case .sentiment: return "Running Sentiment Analysis"
        case .tone: return "Loading Tone Analysis"
        case .original: return "Loading Summarized Article"
        case .none: return "Content is Loading"
        case .tokenError: return "Token Limit Exceded"
        case .error: return "Error"
        }
    }
}
